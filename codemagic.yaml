workflows:
  build_dia_register_release:
    name: Build DIA Register (Auto Detect APK + AAB)
    max_build_duration: 60
    environment:
      flutter: stable
      vars:
        ZIP_FILE: "dia_register_fixed.zip"
        UNZIP_DIR: "unzipped_project"

    scripts:
      # 1️⃣ Extract uploaded Flutter project
      - name: Extract project
        script: |
          echo "📦 Extracting Flutter project..."
          rm -rf $UNZIP_DIR
          mkdir -p $UNZIP_DIR
          unzip -q "$ZIP_FILE" -d "$UNZIP_DIR"
          echo "✅ Extraction complete. Folder structure:"
          ls -R $UNZIP_DIR

      # 2️⃣ Locate pubspec.yaml
      - name: Locate Flutter project folder
        script: |
          echo "🔍 Searching for pubspec.yaml..."
          export PROJECT_DIR=$(find $UNZIP_DIR -type f -name "pubspec.yaml" -exec dirname {} \; | head -n 1)
          if [ -z "$PROJECT_DIR" ]; then
            echo "❌ No Flutter project found!"; exit 1
          fi
          echo "✅ Found Flutter project at: $PROJECT_DIR"
          echo "PROJECT_DIR=$PROJECT_DIR" >> $CM_ENV_PATH

      # 3️⃣ Install Flutter dependencies
      - name: Install Flutter dependencies
        script: |
          echo "🚀 Running flutter pub get..."
          cd "$PROJECT_DIR"
          flutter pub get
          echo "✅ Dependencies installed."

       # 2️⃣ Locate pubspec.yaml
      - name: Locate Flutter project folder
        script: |
          echo "🔍 Searching for pubspec.yaml..."
          export PROJECT_DIR=$(find $UNZIP_DIR -type f -name "pubspec.yaml" -exec dirname {} \; | head -n 1)
          if [ -z "$PROJECT_DIR" ]; then
            echo "❌ No Flutter project found!"; exit 1
          fi
          echo "✅ Found Flutter project at: $PROJECT_DIR"

          # Safely store PROJECT_DIR for next steps
          if [ -z "$CM_ENV_PATH" ]; then
            echo "⚙️ CM_ENV_PATH not set — using fallback path."
            CM_ENV_PATH="/tmp/env_vars.txt"
          fi
          echo "PROJECT_DIR=$PROJECT_DIR" >> "$CM_ENV_PATH"


      # 5️⃣ Build AAB (Play Store)
      - name: Build release AAB
        script: |
          cd "$PROJECT_DIR"
          echo "🏗️ Building release AAB..."
          flutter build appbundle --release
          echo "✅ AAB build complete."

      # 6️⃣ Auto-detect all outputs and move them
      - name: Collect artifacts
        script: |
          echo "📦 Collecting all build outputs..."
          mkdir -p build_outputs
          find "$PROJECT_DIR/build/app/outputs" -type f \( -name "*.apk" -o -name "*.aab" \) -exec cp {} build_outputs/ \;
          echo "✅ All artifacts moved to build_outputs folder:"
          ls -lh build_outputs

    artifacts:
      - build_outputs/*.apk
      - build_outputs/*.aab

    publishing:
      email:
        recipients:
          - your@email.com



